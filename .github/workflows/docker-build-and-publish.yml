name: Docker Builds and Publish

# Controls when the workflow will run
on:
  workflow_dispatch:
  push:
    branches:
      - 'main'
      - 'develop'
      - 'feat/*'
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - 'main'
      - 'develop'

permissions: 
  packages: write
  contents: read
  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    # Get the repository's code
      - name: Checkout
        uses: actions/checkout@v3
      # https://github.com/docker/setup-qemu-action
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: Set up Go
        id: go
        uses: actions/setup-go@v3
      - name: Login to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: get version to build
        if: "contains(github.ref_type, 'branch')"
        run: |
          echo "RELEASEVERSION=0.0.1-$(echo ${{ github.ref_name}} | tr '/' '-')" >> $GITHUB_ENV
      - name: get version to build
        if: "contains(github.ref_type, 'tag')"
        run: echo "RELEASEVERSION=${{ github.ref_name }}" >> $GITHUB_ENV
      - name: Docker meta
        id: tagging # you'll use this in the next step
        uses: docker/metadata-action@v3
        with:
          # list of Docker images to use as base name for tags
          images: |
            ghcr.io/infra-mgmt-io/perms
          # Docker tags based on the following events/attributes
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=tag
            type=ref,event=pr
            type=semver,pattern={{raw}}
            type=semver,pattern={{raw}},value=${{ env.RELEASEVERSION}}
            type=sha
      - name: Get Controller Gen
        run: |
          export CONTROLLER_TOOLS_VERSION=v0.9.2
          export WORKINGDIR=`pwd`
          export LOCALBIN=${WORKINGDIR}/bin/
          export VERSION=${{ env.RELEASEVERSION}}
          rm -f ${LOCALBIN}/controller-gen
          GOBIN=${LOCALBIN} go install sigs.k8s.io/controller-tools/cmd/controller-gen@${CONTROLLER_TOOLS_VERSION}
          ${LOCALBIN}controller-gen object:headerFile="hack/boilerplate.go.txt" paths="./..."
          ${LOCALBIN}controller-gen rbac:roleName=manager-role crd webhook paths="./..." output:crd:artifacts:config=config/crd/bases 
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.tagging.outputs.tags }}
          labels: ${{ steps.tagging.outputs.labels }}