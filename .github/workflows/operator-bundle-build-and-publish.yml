name: Build and Publish Operator Bundle

# Controls when the workflow will run
on:
  workflow_dispatch:
  push:
    tags:
      - 'v*.*.*'
    branches:
      - 'main'
      - 'develop'
      - 'feat/*'
defaults:
  run:
    shell: bash

permissions: 
  packages: write
  contents: read
  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    # Get the repository's code
      - name: Checkout
        uses: actions/checkout@v3
      # https://github.com/docker/setup-qemu-action
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: Set up Go
        id: go
        uses: actions/setup-go@v3
      - name: Login to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Operator SDK
        run: |
          export ARCH=$(case $(uname -m) in x86_64) echo -n amd64 ;; aarch64) echo -n arm64 ;; *) echo -n $(uname -m) ;; esac) && \
          export OS=$(uname | awk '{print tolower($0)}') && \
          export OPERATOR_SDK_DL_URL=https://github.com/operator-framework/operator-sdk/releases/download/v1.22.2 && \
          curl -LO ${OPERATOR_SDK_DL_URL}/operator-sdk_${OS}_${ARCH} && \
          gpg --keyserver keyserver.ubuntu.com --recv-keys 052996E2A20B5C7E && \
          curl -LO ${OPERATOR_SDK_DL_URL}/checksums.txt && \
          curl -LO ${OPERATOR_SDK_DL_URL}/checksums.txt.asc && \
          gpg -u "Operator SDK (release) <cncf-operator-sdk@cncf.io>" --verify checksums.txt.asc && \
          grep operator-sdk_${OS}_${ARCH} checksums.txt | sha256sum -c - && \
          chmod +x operator-sdk_${OS}_${ARCH} && sudo mv operator-sdk_${OS}_${ARCH} /usr/local/bin/operator-sdk
      - name: Docker meta
        id: taggingbundle # you'll use this in the next step
        uses: docker/metadata-action@v3
        with:
          # list of Docker images to use as base name for tags
          images: |
            ghcr.io/infra-mgmt-io/perms-bundle
          # Docker tags based on the following events/attributes
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=tag
            type=ref,event=pr
            type=semver,pattern={{raw}}
            type=semver,pattern={{raw}},value=v0.0.2
            type=sha
      - name: build operator bundle
        run: |
          export WORKINGDIR=`pwd`
          export LOCALBIN=${WORKINGDIR}/bin/
          export KUSTOMIZE_INSTALL_SCRIPT="https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh"
          export KUSTOMIZE_VERSION=4.5.7
          export VERSION=0.0.2
          export CHANNEL=develop
          export IMAGE_TAG_BASE=ghcr.io/infra-mgmt-io/perms
          export BUNDLE_CHANNELS=--channels=${CHANNEL}
          export BUNDLE_DEFAULT_CHANNEL=--default-channel=${CHANNEL}
          export BUNDLE_METADATA_OPTS="${BUNDLE_CHANNELS} ${BUNDLE_DEFAULT_CHANNEL}"
          export BUNDLE_IMG=${IMAGE_TAG_BASE}-bundle:v${VERSION}
          export CATALOG_IMG="${IMAGE_TAG_BASE}-catalog:v${VERSION}"
          export IMG=ghcr.io/infra-mgmt-io/perms:v${VERSION}
          export BUNDLE_GEN_FLAGS="-q --overwrite --version ${VERSION} ${BUNDLE_METADATA_OPTS}"
          mkdir -p ${LOCALBIN}
          rm -f ${LOCALBIN}/kustomize
          curl -s ${KUSTOMIZE_INSTALL_SCRIPT} | bash -s -- ${KUSTOMIZE_VERSION} ${LOCALBIN}
          operator-sdk generate kustomize manifests -q
          cd config/manager && ${LOCALBIN}kustomize edit set image controller=${IMG}
          cd ../../
          ${LOCALBIN}kustomize build config/manifests | operator-sdk generate bundle ${BUNDLE_GEN_FLAGS}
          operator-sdk bundle validate ./bundle
          docker build -f bundle.Dockerfile -t ${BUNDLE_IMG} .
          docker push ${BUNDLE_IMG}
          curl -sSLo ${LOCALBIN}opm https://github.com/operator-framework/operator-registry/releases/download/v1.26.1/linux-amd64-opm
          chmod +x ${LOCALBIN}opm
          ${LOCALBIN}opm index add --container-tool docker --mode semver --tag ${CATALOG_IMG} --bundles ${BUNDLE_IMG}
          docker push ${CATALOG_IMG}
      # - name: Operator bundle verify
      #   run: operator-sdk bundle validate ./bundle
      # - name: Build and push
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: .
      #     file: bundle.Dockerfile
      #     platforms: linux/amd64
      #     push: ${{ github.event_name != 'pull_request' }}
      #     tags: ${{ steps.taggingbundle.outputs.tags }}
      #     labels: ${{ steps.taggingbundle.outputs.labels }}
      # - name: build catalog
      #   run: |
      #     export WORKINGDIR=`pwd`
      #     export LOCALBIN=${WORKINGDIR}/bin/
      #     curl -sSLo ${LOCALBIN}opm https://github.com/operator-framework/operator-registry/releases/download/v1.26.1/linux-amd64-opm
      #     chmod +x ${LOCALBIN}opm
      #     export BUNDLE_IMG=ghcr.io/infra-mgmt-io/perms-bundle:v0.0.2
      #     export CATALOG_IMG=ghcr.io/infra-mgmt-io/perms-catalog:v0.0.2
      #     ${LOCALBIN}opm index add --container-tool docker --mode semver --tag ${CATALOG_IMG} --bundles ${BUNDLE_IMG}
      #     docker push ${CATALOG_IMG}
